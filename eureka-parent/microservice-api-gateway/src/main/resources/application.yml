server:
  port: 9201 #\u670D\u52A1\u7AEF\u53E3
spring:
  application:
    name: app-zuul-gateway #\u6307\u5B9A\u670D\u52A1\u540D
###\u670D\u52A1\u6CE8\u518C\u5230eureka\u6CE8\u518C\u4E2D\u5FC3\u7684\u5730\u5740
eureka:
  client:
    service-url:
      defaultZone: http://jonas:jonas@127.0.0.1:9101/eureka/,http://jonas:jonas@127.0.0.1:9102/eureka/
    ###\u56E0\u4E3A\u8BE5\u5E94\u7528\u4E3A\u670D\u52A1\u63D0\u4F9B\u8005\uFF0C\u662Feureka\u7684\u4E00\u4E2A\u5BA2\u6237\u7AEF\uFF0C\u9700\u8981\u6CE8\u518C\u5230\u6CE8\u518C\u4E2D\u5FC3
    register-with-eureka: true
    ###\u662F\u5426\u9700\u8981\u4ECEeureka\u4E0A\u68C0\u7D22\u670D\u52A1
    fetch-registry: true
  instance:
    prefer-ip-address: true #\u5C06\u81EA\u5DF1\u7684ip\u5730\u5740\u6CE8\u518C\u5230Eureka\u670D\u52A1\u4E2D
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}###${server.port} #\u6307\u5B9A\u5B9E\u4F8Bid
zuul:
  routes: #定义服务转发规则
#    ，Zuul在注册到Eureka服务中心之后，它会为Eureka中的每个服务都创建一个默认的路由规则，
#  默认规则的path会使用serviceId配置的服务名作为请求前缀,
    item-service: #item-service这个名字是任意写的
      path: /item-service/** #匹配item-service的请求app-item服务
      #url: http://127.0.0.1:8081 #将服务路由到指定的url上 定死, 不推荐
      serviceid: item-service-compose
#    order-service:
#      path: /order-service/**
#      serviceid: order-service-compose
#      忽略指定的微服务  ,默认会给所有服务配置路由
#  如果使用*可忽略所有服务只路由 配置中的服务
#  如果不忽略 手动配置的路由 也会生效    自动配置的也会生效
  ignored-services: order-service-compose
#  通过正则忽略 路由映射
#  ignored-patterns: